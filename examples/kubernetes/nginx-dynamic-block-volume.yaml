# Nginx pod with dynamic storage creation using NexentaStor Block CSI driver
#
# $ kubectl apply -f examples/kubernetes/nginx-dynamic-block-volume.yaml
#
# --------------------------------------
# NexentaStor CSI Driver - Storage Class
# --------------------------------------

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: nexentastor-block-csi-driver-sc-nginx-dynamic
provisioner: nexentastor-block-csi-driver.nexenta.com
allowVolumeExpansion: true
# volumeBindingMode: Immediate
# allowedTopologies:
# - matchLabelExpressions:
#   - key: topology.kubernetes.io/zone
#     values:
#     - zone-1
parameters:
  sparseVolume: "true"               # [optional] Defines whether the volumes should be created sparsed(thin)
#   csi.storage.k8s.io/fstype: xfs
#   configName: nstor-box3
#   dataset: customPool/customDataset # to overwrite "defaultDataset" config property [pool/dataset]
#   dataIp: 20.20.20.253              # to overwrite "defaultDataIp" config property
---

# ------------------------------------------------
# NexentaStor CSI Driver - Persistent Volume Claim
# ------------------------------------------------

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nexentastor-block-csi-driver-pvc-nginx-dynamic-block
spec:
  storageClassName: nexentastor-block-csi-driver-sc-nginx-dynamic
  accessModes:
    - ReadWriteMany
    # - ReadWriteOnce
  volumeMode: Block
  resources:
    requests:
      storage: 1Gi
---
# ---------
# Nginx pod
# ---------

apiVersion: v1
kind: Pod
metadata:
  name: nginx-dynamic-block-volume
spec:
  containers:
    - image: nginx
      securityContext:
        privileged: true
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
        - containerPort: 80
          protocol: TCP
      volumeDevices:
        - devicePath: /dev/sdf
          name: nexentastor-block-csi-driver-data-block
  volumes:
    - name: nexentastor-block-csi-driver-data-block
      persistentVolumeClaim:
        claimName: nexentastor-block-csi-driver-pvc-nginx-dynamic-block
        readOnly: false
